trigger: none

pool:
  vmImage: 'windows-latest'

variables:
- name: AzureSubscription
  value: '$(ServiceConnection)'

steps:
- task: AzurePowerShell@2
  displayName: 'Build Agent Image'
  inputs:
    azureSubscription: $(AzureSubscription)
    ScriptType: 'FilePath'
    ScriptPath: 'scripts\build-image.ps1'
    ScriptArguments: '-Location "$(Location)" -PackerFile "$(PackerFile)" -ClientId "$(ClientId)" -ClientSecret "$(ClientSecret)" -TenantId "$(TenantId)" -SubscriptionId "$(SubscriptionId)" -ManagedImageResourceGroupName "$(ManagedImageResourceGroupName)" -ManagedImageName "$(ManagedImageName)"'
    azurePowerShellVersion: 'LatestVersion'
- task: AzurePowerShell@2
  displayName: 'Deploy Azure Scale Set VM'
  inputs:
    azureSubscription: $(AzureSubscription)
    ScriptType: 'FilePath'
    ScriptPath: 'scripts\deploy-scalesetVM.ps1'
    ScriptArguments: '-Location "$(Location)" -VMUserName "$(VMUserName)" -VMUserPassword "$(VMUserPassword)" -VMName "$(VMName)" -AgentPoolResourceGroup "$(AgentPoolResourceGroup)" -ScaleSetName "$(ScaleSetName)" -ManagedImageResourceGroupName "$(ManagedImageResourceGroupName)" -ManagedImageName "$(ManagedImageName)"'
    azurePowerShellVersion: 'LatestVersion' 
- task: AzurePowerShell@2
  displayName: 'Deploy Azure DevOps Agent'
  inputs:
    azureSubscription: '$(AzureSubscription)'
    ScriptType: 'FilePath'
    ScriptPath: 'scripts\deploy-agent.ps1'
    ScriptArguments: '-Location "$(Location)" -VMUserName "$(VMUserName)" -VMUserPassword "$(VMUserPassword)" -VMName "$(VMName)" -AzureDevOpsPAT "$(AzureDevOpsPAT)" -AzureDevOpsURL "$(AzureDevOpsURL)" -ScaleSetName "$(ScaleSetName)" -AgentPoolName "$(AgentPoolName)" -AgentPoolResourceGroup "$(AgentPoolResourceGroup)"'
    azurePowerShellVersion: 'LatestVersion'
